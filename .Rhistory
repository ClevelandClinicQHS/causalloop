tibble::tibble(loopIx = l$loopIx, nodes = c(l$cycle$from, l$cycle$to))
})
FBL.nodes <- FBL.nodes %>%
dplyr::bind_rows() %>%
dplyr::group_by(loopIx, nodes) %>%
dplyr::filter(dplyr::row_number() == 1) %>%
dplyr::ungroup()
selectedLoops <- dplyr::left_join(tibble::tibble(nodes = nodes),
FBL.nodes, by = "nodes") %>%
dplyr::select(loopIx)
FBL <- FBL[unlist(purrr::map(FBL, function(.x) .x$loopIx %in% selectedLoops$loopIx))]
}
if("loopIx" %in% names(.dots)){
stopifnot(is.numeric(loopIx))
FBL <- FBL[unlist(purrr::map(FBL, function(.x) .x$loopIx %in% loopIx))]
}
if(length(FBL) == 0){
stop("No loops found involving the loop indices given in 'loopIx'!")
}
#make tibble containing the selected feedback loops
loopToTibble <- function(l){
l$cycle %>%
dplyr::mutate(loopIx = l$loopIx,
type   = l$type,
label  = paste0(l$loopIx, ": ", l$label)) %>%
return
}
pd <- purrr::map(FBL, loopToTibble) %>% dplyr::bind_rows()
ggplot2:: ggplot(data=pd) +
ggplot2::facet_wrap(~ label) +
ggplot2::theme_minimal() +
ggplot2::geom_vline(xintercept=0) +
ggplot2::scale_x_continuous(breaks=c(-999)) +
ggplot2::theme(axis.title.x=ggplot2::element_blank(),
axis.text.x=ggplot2::element_blank(),
axis.ticks.x=ggplot2::element_blank())
}
plot(loops)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1r3-ayWgAOE2LjVzHbQxM-CwLCx_xLoUu1ZqY4ppStS4"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- edf2CLD(d)
plot(g)
plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
zz <- getLoops(g)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- edf2CLD(d)
plot(g)
plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
plot(g, nodes=c("Daily Intake", "Inflammation"))
plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- edf2CLD(d)
plot(g)
# plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
# plot(g, nodes=c("Daily Intake", "Inflammation"))
# plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
#
# plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- edf2CLD(d)
plot(g)
# plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
# plot(g, nodes=c("Daily Intake", "Inflammation"))
# plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
#
# plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- edf2CLD(d)
plot(g)
# plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
# plot(g, nodes=c("Daily Intake", "Inflammation"))
# plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
#
# plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
head(d)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
# plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
# plot(g, nodes=c("Daily Intake", "Inflammation"))
# plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
#
# plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
g$edges
d <- gs_read(ss=gsk, ws="relationships")
d
g <- CLD(d$from, d$to, d$polarity)
plot(g)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
# plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
# plot(g, nodes=c("Daily Intake", "Inflammation"))
# plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
#
# plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
# plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
# plot(g, nodes=c("Daily Intake", "Inflammation"))
# plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
#
# plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
# plot(g, nodes = c("Neighborhood Disadvantage", "Access to Healthy Foods"))
# plot(g, nodes=c("Daily Intake", "Inflammation"))
# plot(g, nodes=c("Daily Intake", "Inflammation"), steps=2)
#
# plot(g, nodes=c("Seeks Preventive Care", "Tobacco Exposure"))
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d
as.data.frame(d)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
g <- CLD(d$from, d$to, d$polarity)
plot(g)
g
d
as.data.frame(d)
d <- gs_read(ss=gsk, ws="relationships")
as.data.frame(d)
d <- d[!is.na(d$from),]
as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
g
g$edges
as.data.frame(g$edges)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
g <- CLD(d$from, d$to, d$polarity)
plot(g)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d
as.data.frame(d)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- as.data.frame(d)
d
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d
length(d$polarity)
#'
#' @importFrom tibble tibble
#'
#' @export
#'
#' @examples
#' L <- CLD(from=c("a","a","c","c","d"), to=c("b","c","a","d","a"))
#' L$edges
#'
#'
CLD <- function(from, to, polarity=1, weight=1){
#set up edge tibble
edf <- processEdgeInput(from, to)
# if(!(length(polarity) %in% c(1, nrow(edf)))){
#   stop("'polarity' must be length 1 or length equal to that of 'from' and 'to")
# }
if(!(is.numeric(polarity) && all(unique(polarity) %in% c(-1,1)))){
stop("polarity must contain values in c(-1,1) *only*.")
}
edf$polarity <- polarity
if(!(length(weight) %in% c(1, nrow(edf)))){
stop("'weight' must be length 1 or length equal to that of 'from' and 'to")
}
if(!(is.numeric(weight) && all(unique(weight) > 0))){
stop("weight must contain positive values *only*.")
}
edf$weight <- weight
#set up default edge and node formats
efmt <- dplyr::tibble(polarity    = c(1,-1),
style       = c("solid","dotted"),
color       = c("ForestGreen","red"),
arrowhead   = c("vee","box"),
penwidthAdj = c(1,2))
nfmt = dplyr::tibble(group      = "<default>",
shape      = "rectangle",
style      = "transparent",
color      = "transparent",
fillcolor  = "transparent",
fontname   = "Arial Narrow",
fontcolor  = "black",
height     = 0.5,
width      = 0.7)
nodes <- sort(unique(c(edf$from, edf$to)))
ndf <- dplyr::tibble(node=nodes, group="<default>")
L <- list(edges=edf, nodes=ndf, formats=list(edge=efmt, node=nfmt))
class(L) <- "CLD"
return(L)
}
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
processEdgeInput <- function(from, to){
if(!is.character(from)) stop("Parameter 'from' must be a character vector.")
if(!is.character(to)) stop("Parameter 'to' must be a character vector.")
if(length(from) != length(to)){
if(!(1 %in% c(length(from), length(to)))){
stop("When different lengths for 'from' and 'to' are given, one must be length 1.")
}
}
edf <- tibble::tibble(from=from, to=to)
dupIx <- which(!duplicated(edf))
if(length(dupIx) != nrow(edf)){
warning("Duplicate edges were specified. These were removed from the output.")
edf <- edf[dupIx,]
}
edf
}
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
plot(g, nodes=c("Inflammation", "Perceived Stress"))
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
plot(g, nodes=c("Inflammation", "ASCVD Event Risk"))
d <- gs_read(ss=gsk, ws="relationships")
plot(g)
plot(g, nodes=c("Inflammation", "ASCVD Event Risk"))
plot(g, nodes=c("Inflammation", "ASCVD Event Risk"),
steps=2)
devtools::install_github("jarrod-dalton/causalloop")
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1pOs69X7kqTVOHgjMrqBeZpHshG85C4FEHFZnKF-QZUs"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships_TeamC")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1r3-ayWgAOE2LjVzHbQxM-CwLCx_xLoUu1ZqY4ppStS4"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships_TeamC")
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
library(causalloop)
library(tidyverse)
library(googlesheets)
key <- "1r3-ayWgAOE2LjVzHbQxM-CwLCx_xLoUu1ZqY4ppStS4"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships_TeamC")
names(d) <- tolower(names(d))
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
g <- CLD(d$from, d$to, d$polarity)
plot(g)
d
table(duplicated(d[,c("from","to")]))
key <- "1r3-ayWgAOE2LjVzHbQxM-CwLCx_xLoUu1ZqY4ppStS4"
gsk <- gs_key(key)
d <- gs_read(ss=gsk, ws="relationships_TeamC")
names(d) <- tolower(names(d))
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
d <- d[!duplicated(d[,c("from","to")]),]
g <- CLD(d$from, d$to, d$polarity)
plot(g)
makeIt <- function(ws){
d <- gs_read(ss=gsk, ws=ws)
names(d) <- tolower(names(d))
d <- d[!is.na(d$from),]
d <- as.data.frame(d)
d <- d[!duplicated(d[,c("from","to")]),]
g <- CLD(d$from, d$to, d$polarity)
}
g <- makeIt("relationships_TeamC")
