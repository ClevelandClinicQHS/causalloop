{
    "contents" : "require(googlesheets); require(dplyr); require(DiagrammeR);\n\n# read in variable & relationship datasets from Google Sheets, convert to node & edge data frames\nmy_gsheet_key <- \"1iqNYFdpD0WygmdgBKeowSlVrEcPrpizefCX5bR6-s1Y\"\nmy_gsheet <- gs_key(x = my_gsheet_key)\n#vars <- gs_title(\"ICU Model - Causal Relationships\") %>% gs_read(ws = \"Variables\")\nvars <- my_gsheet %>% gs_read_csv(ws = \"Variables\")\nvars$nodes <- gsub(\" \",\"\\n\",vars$variable)\n\n#links  <-gs_title(\"ICU Model - Causal Relationships\") %>% gs_read(ws = \"Relationships\")\nlinks <- my_gsheet %>% gs_read_csv(ws = \"Relationships\")\nlinks$from <- gsub(\" \",\"\\n\",links$predictor)\nlinks$to   <- gsub(\" \",\"\\n\",links$outcome)\nnegIx <- which(links$polarity == -1)\nlinks <- links[,c(\"from\",\"to\",\"polarity\")]\n\n#do some formatting stuff to the graph data frames\nformatNodeDF <- function(ndf){\n  ndf$shape <- \"rectangle\"\n  ndf$style <- \"transparent\"\n  ndf$color <- \"transparent\"\n  ndf$fillcolor  <- \"transparent\"\n  ndf$fontname <- \"Arial Narrow\"\n  ndf$fontcolor <- \"black\"\n  ndf$width <- 0.7\n  return(ndf)\n}\nformatEdgeDF <- function(xx){\n  negIx <- which(xx$polarity == (-1))\n  xx$style     <- \"solid\";        xx$style[negIx]     <- \"dotted\";\n  xx$color     <- \"ForestGreen\";  xx$color[negIx]     <- \"red\";\n  xx$arrowhead <- \"vee\";          xx$arrowhead[negIx] <- \"box\"\n  xx$penwidth  <- 2;              xx$penwidth[negIx]  <- 5;\n  return(xx)\n}\n\n#function to actually remove a node from a graph, rewiring all incoming edges to outgoing variables\nremoveNodes <- function(x){\n  stopifnot(is.character(x))\n  x <- gsub(\" \",\"\\n\",x)\n  stopifnot(all(x %in% vars$nodes))\n  n <- length(x)\n  vars <- vars[!(vars$nodes %in% x),]\n\n  for(v in 1:n){\n    node <- x[v]\n    inVarIx <- which(links$to == node);    inVars  <- links$from[inVarIx];\n    outVarIx <- which(links$from ==node);  outVars <- links$to[outVarIx];\n    newLinks <- expand.grid(from = inVars, to = outVars)\n    newLinks$polarity <- as.numeric(links$polarity[inVarIx] %o% links$polarity[outVarIx])\n    links <- links[setdiff(1:nrow(links), c(inVarIx,outVarIx)),]\n    links <- rbind(links,newLinks)\n  }\n  links <- links[!duplicated(links),] #possibly, removing some nodes makes duplicate links.\n  return(list(vars=vars, links=links))\n}\n\n#function to select a subgraph of an existing graph for plotting\nnodeView <- function(graph, nodes, steps=1){\n  stopifnot(round(steps) == steps & steps >= 0)\n  nodes <- gsub(\" \",\"\\n\",nodes)\n  ndf <- graph$nodes_df\n  edf <- graph$edges_df\n\n  inNodes <- outNodes <- origNodes <- nodes[nodes %in% ndf$nodes]\n  if(steps>0)  for(i in 1:steps) {\n    inNodes  <- unique(c(inNodes, edf$from[which(edf$to %in% inNodes)]))\n    outNodes <- unique(c(outNodes, edf$from[which(edf$to %in% outNodes)]))\n  }\n  nodes <- unique(c(inNodes,outNodes))\n  ndf <- ndf[ndf$nodes %in% nodes, ]\n  edf <- edf[(edf$from %in% nodes) & (edf$to %in% nodes), ]\n\n  #some formatting\n  ndf$color[ndf$ndoes %in% origNodes] <- \"black\"\n  ndf$fontcolor[ndf$nodes %in% origNodes] <- \"blue\"\n  edf$color[!((edf$from %in% origNodes) | (edf$to %in% origNodes))] <- \"gray80\"\n  h <- create_graph(ndf, edf, graph_attrs = c(\"layout = dot\", \"fixedsize = true\",\n                                              \"overlap = scale\"))\n  return(h)\n}\n\n\n#Remove latent variable nodes from the graph\n#as.data.frame(links)\nremoveVars <- vars$variable[vars$type == \"Latent\"]\nxx <- removeNodes(removeVars)\nvars <- xx$vars;  links <- xx$links;\n#as.data.frame(links)\n\nndf <- as.data.frame(formatNodeDF(vars))\nndf$variable <- ndf$type <- ndf$timeUnit <- NULL\nedf <- as.data.frame(formatEdgeDF(links))\n\n\ng <- create_graph(ndf, edf, graph_attrs=c(\"layout = dot\"))  #%>%\n  #set_global_graph_attrs(\"graph\",\"layout\",\"dot\")# %>%\n  #set_global_graph_attrs(\"graph\",\"overlap\",\"scale\") %>%\n  #set_global_graph_attrs(\"graph\",\"fixedsize\",\"false\")\nrender_graph(g)\n\n#nodeView(g, \"Arrest\") %>% render_graph()\n#nodeView(g, c(\"GFR\",\"MAP\",\"Catecholamines\")) %>% render_graph()\nh <- nodeView(g, c(\"GFR\",\"MAP\",\"Cardiac\\nOutput\",\"Vasopressors\"))\n\n\n\n\n",
    "created" : 1510239249557.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1011446458",
    "id" : "45FB2668",
    "lastKnownWriteTime" : 1483026179,
    "path" : "~/Google Drive/projects/dalton/021_ICU/causal mapping/GFR_causalLoopDiagram-5.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}